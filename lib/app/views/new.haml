%form{ :method => "post", :action => (@project.new? ? root_path : project_path(@project)) }
  - unless @project.new?
    .hidden
      %input{ :name => "_method", :type => "hidden", :value => "put" }

  %p.required{ :class => error_class(@project, :name) }
    %label{ :for => "project_name" }<
      &== Name #{errors_on(@project, :name)}
    %input.text#project_name{ :name => "project_data[name]", :type => "text", :value => @project.name }

  %p.required{ :class => error_class(@project, :uri) }
    %label{ :for => "project_repository" }<
      &== Repository URI#{errors_on(@project, :uri)}
    %input.text#project_repository{ :name => "project_data[uri]", :type => "text", :value => @project.uri }

  %p.normal{ :class => error_class(@project, :branch) }
    %label{ :for => "project_branch" }<
      &== Branch to track #{errors_on(@project, :branch)}
    %input.text#project_branch{ :name => "project_data[branch]", :type => "text", :value => @project.branch }

  %p.normal{ :class => error_class(@project, :command) }
    %label{ :for => "project_build_script" }
      &== Build script #{errors_on(@project, :command)}
    %textarea#project_build_script{ :name => "project_data[command]", :cols => 40, :rows => 2 }~ @project.command.to_s
  
  %p.normal{ :class => error_class(@project, :artifacts) }
    %label{ :for => "project_artifacts" }<
      &== Artifacts to provide
    %input.text#project_artifacts{ :name => "project_data[artifacts]", :type => "text", :value => @project.artifacts }
    %p.explanation Relative paths of files to expose per build. Separate multiple paths with semicolons. Wildcards are allowed (?, *, []) and must be escaped with a backslash if part of a filename.

  %p.normal{ :class => error_class(@project, :coverage_provider) }
    %label{ :for => "coverage_provider" }<
      &== Coverage provider
    - dropdown_with_titles("project_data[coverage_provider]", "project_data[coverage_provider]", Integrity::CoverageProvider.all, @project.coverage_provider)

  %p.normal.checkbox
    %label{ :for => "project_public" } Public project
    %input.hidden{ :name => "project_data[public]", :value => "0", :type => "hidden" }
    %input.checkbox#project_public{ checkbox("project_data[public]", @project.public?) }

  - notifier_form

  %p.submit
    %button.positive{ :type => "submit" }= @project.new? ? "Create Project" : "Update Project"

- unless @project.new?
  %form{ :method => "post", :action => project_path(@project) }
    .hidden
      %input{ :name => "_method", :type => "hidden", :value => "delete" }
    %h2 Delete this project
    %p.submit.destroy
      This will delete the project and all the builds in the system
      %button.negative{ :type => "submit" } Yes, I'm sure, nuke it
