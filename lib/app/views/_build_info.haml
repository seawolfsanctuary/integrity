%form{ :action => build_path(build), :method => :post }
  %p.submit
    %button{ :type => :submit, :title => "Rebuild this commit" }<
      Rebuild

%h1
  = build.human_status
  - if build.building?
    - if build.human_time_since_start && !build.human_time_since_start.empty?
      &== for #{build.human_time_since_start}
  - elsif !build.pending?
    &== in #{build.human_duration}

%blockquote
  %p
    #{h(build.full_message).gsub("\n", '<br />')}
  %p.meta<
    %span.who<
      &== by: #{build.author}
    |
    %span.when{ :title => build.committed_at }<
      &= pretty_date build.committed_at
    - if build.coverage
      | covers
      %span.coverage
        #{build.coverage.to_s}%
    - if build.project.github?
      |
      %span.github<
        %a{ :href => github_commit_url(build) } view on GitHub

- if build.building? || build.completed?
  - if ! build.project.artifacts_empty? && !(files = artifact_files(build)).empty?
    %h2
      Artifacts
      %blockquote
        %ul#artifacts
          - files.each do |file|
            %a{ :title => file[:relative_path],
                :href => file[:url] } #{file[:name]}
            %br/

- if build.completed? || build.building? && !build.output.empty?
  %h2
    Build Output
    %a{:href => build_path(build, :raw)} (raw)

  .output-container
    %p.output-action#js-scroll-output
      %button{ :type => :button }<
        Scroll to End of Log
    %pre.output#js-output
      :preserve
        #{bash_color_codes h(build.output)}
